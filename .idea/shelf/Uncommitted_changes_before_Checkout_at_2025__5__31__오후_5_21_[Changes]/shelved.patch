Index: app/src/main/java/com/glowstudio/android/blindsjn/feature/splash/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.glowstudio.android.blindsjn.feature.splash\n\nimport android.net.Uri\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.LaunchedEffect\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.viewinterop.AndroidView\nimport androidx.media3.common.MediaItem\nimport androidx.media3.common.Player\nimport androidx.media3.exoplayer.ExoPlayer\nimport androidx.media3.ui.PlayerView\nimport kotlinx.coroutines.delay\n\n@Composable\nfun SplashScreen(\n    onSplashFinished: () -> Unit\n) {\n    val context = LocalContext.current\n    val exoPlayer = remember {\n        ExoPlayer.Builder(context).build().apply {\n            val mediaItem = MediaItem.Builder()\n                .setUri(Uri.parse(\"android.resource://${context.packageName}/raw/logo\"))\n                .build()\n            setMediaItem(mediaItem)\n            repeatMode = Player.REPEAT_MODE_OFF\n            playWhenReady = true\n            prepare()\n        }\n    }\n\n    LaunchedEffect(Unit) {\n        // 영상 재생이 끝나면 메인 화면으로 이동\n        exoPlayer.addListener(object : Player.Listener {\n            override fun onPlaybackStateChanged(state: Int) {\n                if (state == Player.STATE_ENDED) {\n                    onSplashFinished()\n                }\n            }\n        })\n    }\n\n    Box(\n        modifier = Modifier.fillMaxSize(),\n        contentAlignment = Alignment.Center\n    ) {\n        AndroidView(\n            factory = { context ->\n                PlayerView(context).apply {\n                    player = exoPlayer\n                }\n            },\n            modifier = Modifier.fillMaxSize()\n        )\n    }\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/glowstudio/android/blindsjn/feature/splash/SplashScreen.kt b/app/src/main/java/com/glowstudio/android/blindsjn/feature/splash/SplashScreen.kt
--- a/app/src/main/java/com/glowstudio/android/blindsjn/feature/splash/SplashScreen.kt	(revision 4015b912f7a2fe846dabf6f687fce5582bd25f8e)
+++ b/app/src/main/java/com/glowstudio/android/blindsjn/feature/splash/SplashScreen.kt	(date 1748679643203)
@@ -1,6 +1,7 @@
 package com.glowstudio.android.blindsjn.feature.splash
 
 import android.net.Uri
+import androidx.annotation.OptIn
 import androidx.compose.foundation.layout.Box
 import androidx.compose.foundation.layout.fillMaxSize
 import androidx.compose.runtime.Composable
@@ -12,10 +13,13 @@
 import androidx.compose.ui.viewinterop.AndroidView
 import androidx.media3.common.MediaItem
 import androidx.media3.common.Player
+import androidx.media3.common.util.UnstableApi
 import androidx.media3.exoplayer.ExoPlayer
+import androidx.media3.ui.AspectRatioFrameLayout
 import androidx.media3.ui.PlayerView
 import kotlinx.coroutines.delay
 
+@OptIn(UnstableApi::class)
 @Composable
 fun SplashScreen(
     onSplashFinished: () -> Unit
@@ -52,9 +56,11 @@
             factory = { context ->
                 PlayerView(context).apply {
                     player = exoPlayer
+                    useController = false
+                    resizeMode = AspectRatioFrameLayout.RESIZE_MODE_ZOOM
                 }
             },
             modifier = Modifier.fillMaxSize()
         )
     }
-} 
\ No newline at end of file
+}
\ No newline at end of file
